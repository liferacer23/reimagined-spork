Task List

You may do these tasks in any order, but take note that they are listed in the
order your team has prioritized completing them.

Reminder that you are NOT expected to complete all tasks. You are expected to
write clean, readable code. Remember to add comments explaining what you were
working on if you run out of time in the middle of a task.

1. Viewing Movie Details

   When a user clicks on a movie from the list, we want to navigate them to a
   page that has all of the details for that movie.

   a. Navigation: Implement the navigation to this movie details page in
   src/components/MovieList.jsx, using the `Link` component from react router.

   b. Styling:

   - Add the movie image to the movie details page.
   - Add responsive styling so that the movie details page matches the wireframe
     in the Part 1 document.

   Note: There is a movie data stub available for testing in src/testData.js.

2. Loading movie and Image Data

   In order to display the list of movies in our web app, we need to get the
   real movie and image data from two different REST API endpoints. In
   src/helpers/loadMoviesWithImages.js, implement

   function loadMoviesWithImages() { ... }

   The movie list data can be obtained by making a GET request to
   https://lamarr.tech/api/data/movies

   You can get the image URL for each movie by making a GET request to
   https://lamarr.tech/api/data/img/{movieId}

3. Filtering movies

   Users should be able to filter the list of movies by using the "Filter
   movies" input field. In src/helpers/getFilteredMovies.js, implement

   function getFilteredMovies(movies, query) { ... }

   After ensuring that your function meets the basic requirements of a filter
   bar that supports partial searching, we'd like you to implement one or more
   of the following improvements:

   - Handling the "No results found" state
   - Prioritizing certain filtering categories (e.g. filtering by title first,
     then description, etc)
   - Expanding the filtering experience by creating default filter inputs (e.g.
     a checkbox or button to filter by movies with ratings of 4 stars and
     above)

   Unable to implement the third item.

   If you have other ideas that could improve the user filtering experience,
   feel free to implement those instead, as long as your decisions are well
   documented and your code is structured clearly.

How to submit:

- run `npm run diff`
- Upload `result.diff` in the browser.
